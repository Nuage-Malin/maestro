name: Unit tests

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    steps:
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: |
            build
            /opt/mongo
            third_parties
          key: ${{ runner.os }}-unit_tests-build

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.REPO_PROTOBUF_INTERFACES_TOKEN }}
          # secret containing a token allowing access to private repo (protobuf-interface submodule)

      - name: Generate Makefile
        run: cmake -D unit_tests=true -S . -B build

      - name: Build tests
        run: make -C build unit_tests

      - name: Build project
        run: make -C build

      - name: Run MongoDB & maestro & unit tests
        run: |
          docker run -d -p 27017:27017 -e MONGO_INITDB_DATABASE=maestro -e MONGO_INITDB_ROOT_USERNAME=maestro_admin -e MONGO_INITDB_ROOT_PASSWORD=maestro_admin_password --name maestro-mongo mongo:6
          ./build/maestro &
          export MAESTRO_PID=$!
          sleep 3
          echo "Waiting MongoDB to be ready..."
          until $(curl --output /dev/null --silent --fail http://localhost:27017); do
            if [ "$( docker container inspect -f '{{.State.Status}}' maestro-mongo )" != "running" ]; then
              echo "::error::MongoDB exited unexpectedly"
              exit 1
            fi
            printf '.'
            sleep 1
          done
          echo "MongoDB is ready"
          echo "Waiting maestro to be ready..."
          while ! nc -z localhost 8080; do
            if ! ps -p $MAESTRO_PID > /dev/null; then
              echo "::error file=./build/maestro::Maestro exited unexpectedly"
              exit 1
            fi
            printf '.'
            sleep 1
          done
          echo "Maestro is ready"
          echo "Run unit tests"
          ./build/unit_tests > /tmp/unit_tests.log
        env:
          MAESTRO_ADDRESS: "[::]:8080"
          MAESTRO_MONGO_URL: mongodb://maestro_admin:maestro_admin_password@localhost:27017/maestro?authSource=admin
          MAESTRO_TESTS_HOST: localhost
          MAESTRO_TESTS_PORT: 8080

      - name: Result
        if: always()
        run: |
          cat /tmp/unit_tests.log > $GITHUB_STEP_SUMMARY
          cat /tmp/unit_tests.log